{"version":3,"sources":["Components/statistics/notification/Notification.jsx","Components/statistics/Statistics.jsx","Components/feedbackOptions/FeedbackOptions.jsx","Components/App.js","index.js"],"names":["Notification","message","Statistics","good","neutral","negative","rate","total","className","FeedbackOptions","onClickFunc","type","name","onClick","App","useState","setGood","setNeutral","setNegative","setRate","setTotal","useEffect","Math","floor","e","target","prev","ReactDOM","render","document","getElementById"],"mappings":"gNAIeA,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCqBEC,EAnBI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnD,OACE,sBAAKC,UAAU,aAAf,UACE,4CACU,IAATF,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,sBAAKO,UAAU,SAAf,UACE,uCAAUL,KACV,0CAAaC,KACb,2CAAcC,KACd,wCAAWE,KACX,oDAAuBD,EAAvB,cCGKG,EAhBS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzB,OACE,sBAAKF,UAAU,UAAf,UACE,wBAAQG,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,WAAWC,QAASH,EAA/C,0BCsCSI,EA7CH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOV,EAAP,KAAiBa,EAAjB,KACA,EAAwBH,mBAAS,GAAjC,mBAAOT,EAAP,KAAaa,EAAb,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOR,EAAP,KAAca,EAAd,KAEAC,qBAAU,WACR,GAAa,IAATlB,GAA0B,IAAZC,GAA8B,IAAbC,EAAgB,OAAO,EAC1Dc,EAAQG,KAAKC,MAAOpB,GAAQA,EAAOC,EAAUC,GAAa,MAC1De,EAASjB,EAAOC,EAAUC,KACzB,CAACF,EAAMC,EAASC,IAmBnB,OACE,sBAAKG,UAAU,UAAf,UACE,uDACA,cAAC,EAAD,CAAiBE,YApBJ,SAACc,GAEhB,OADiBA,EAAEC,OAAXb,MAEN,IAAK,OACHI,GAAQ,SAACU,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,WACHR,GAAY,SAACQ,GAAD,OAAWA,EAAQ,KAC/B,MACF,QACE,WAQF,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,QCtCfoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.376c7261.chunk.js","sourcesContent":["const Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from './notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, negative, rate, total }) => {\r\n  return (\r\n    <div className=\"statistics\">\r\n      <h2>Statistics</h2>\r\n      {rate === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <div className=\"grades\">\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Negative: {negative}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedback: {rate}%</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  negative: PropTypes.number,\r\n  rate: PropTypes.number,\r\n  total: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onClickFunc }) => {\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button type=\"button\" name=\"good\" onClick={onClickFunc}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onClickFunc}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"negative\" onClick={onClickFunc}>\r\n        Negative\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClickFunc: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport Statistics from './statistics/Statistics';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [negative, setNegative] = useState(0);\r\n  const [rate, setRate] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (good === 0 && neutral === 0 && negative === 0) return false;\r\n    setRate(Math.floor((good / (good + neutral + negative)) * 100));\r\n    setTotal(good + neutral + negative);\r\n  }, [good, neutral, negative]);\r\n\r\n  const addGrade = (e) => {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case 'good':\r\n        setGood((prev) => (prev += 1));\r\n        break;\r\n      case 'neutral':\r\n        setNeutral((prev) => (prev += 1));\r\n        break;\r\n      case 'negative':\r\n        setNegative((prev) => (prev += 1));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>Please leave feedback</h1>\r\n      <FeedbackOptions onClickFunc={addGrade} />\r\n      <Statistics\r\n        good={good}\r\n        neutral={neutral}\r\n        negative={negative}\r\n        rate={rate}\r\n        total={total}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}